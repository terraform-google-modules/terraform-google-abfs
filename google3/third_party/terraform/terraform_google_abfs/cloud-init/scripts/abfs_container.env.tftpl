# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Environment variables passed to the running ABFS server container
NEEDS_GIT=${needs_git}

# server
# skip-validation", "s", false, "When true, skip validating object links"
# port", "p", 50051, "The server port"
# http-port", 0, "The http (v1) server port"
# levels", "l", 2, "Number of nested directory levels (only 2 or 3)"
# local-dir", "d", "/b/server-cache", "The local directory where files are stored"

# gerrit upload-daemon
# "<worker-count> <worker-index> [-p /project/storage/path] [-g /usr/bin/git] [-b branch1,branch2] [-j 5] [-i 1h10m20s] [--pushed-refs-file pushed-refs]"
# "project-storage-path", "p", "$HOME/upload-daemon-projects", "path where the projects should be stored"
# "git-bin",              "g", "/usr/bin/git", "path to `git` binary"
# "branch",               "b", []string{"v-keystone-qcom-dev"}, "Branches from where to find projects (e.g. v-keystone-qcom-dev,v-keystone-qcom-release)"
# "jobs",                 "j", runtime.NumCPU(), "Maximum number of concurrent upload jobs"
# "interval",             "i", 30*time.Minute, "Time between trying to launch more upload tasks, parsable by time.ParseDuration (e.g. 30m)"
# "pushed-refs-file",          "pushed-refs", "File name of the pushed-refs file. Useful for multiple processes pointing at the same project directories."
# "fetch-ref-specs",           []string{"+refs/*:refs/*"}, "The git fetch ref specs that should be used for every project"
# "negative-fetch-ref-specs",  []string{"^refs/changes/*/meta", "^refs/changes/*/robot-comments", "^refs/cache-automerge/*"}, "The git fetch negative ref specs that should be used for every project"
# "http-port",                 0, "http port to listen on"

# "root
# "config", "f", c.ConfigFile, "The path to the abfs config"
# "fetch-timeout", 0, "The timeout for fetching remote objects (override config)"
# "cache-dir", "c", "", "The ABFS cache directory (override config)"
# "local-only", "l", false, "Run ABFS locally without remote access (override config)"
# "remote", "r", false, "Run ABFS with remote access (override config)"
# "manifest-server", "m", "", "The manifest server to assume (override config)"
# "fs", fmt.Sprintf("Filesystem type [%s] (override config)", entities.CASFSTypes())
# "remote-servers", "s", nil, "The remote servers to talk to (override config)"
# "tunnel-ports", "t", nil, "The local ports to use for ssh port-forwarding, zero means no port-forwarding (override config)"
# "remote-project", "", "The GCP project of the remote servers"
# "remote-zone", "", "The GCP zone of the remote servers"
# "enable-index", false, "Enable the localcache index to track objects"
# "evict-threshold", 0, "Size threshold of localcache before eviction, in GB. A zero-value is considered unbounded."
